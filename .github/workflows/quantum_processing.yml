name: Quantum BDI Processing & Security Guard

# on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'

jobs:
  security-scan:
    name: Code Guardian Security Scan
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: python github_actions_quantum/check_secrets.py
      - name: Report Status to Vercel
        if: always()
        run: |
          curl -X POST "${{ secrets.VERCEL_URL }}/api/status" \
          -H "Content-Type: application/json" \
          -d '{"component": "code_guardian", "status": "${{ job.status }}"}'

  run-quantum-pipeline:
    name: Execute Quantum BDI Pipeline
    needs: security-scan
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
      - run: pip install -r requirements.txt
      - id: belief
        run: python github_actions_quantum/quantum/belief_quantum.py
      - id: desire
        run: python github_actions_quantum/quantum/desire_quantum.py --belief-file ${{ steps.belief.outputs.summary_file }}
      - run: python github_actions_quantum/quantum/intention_quantum.py --desire-file ${{ steps.desire.outputs.summary_file }}
      - uses: actions/upload-artifact@v4
        with:
          name: quantum-bdi-results
          path: artifacts/
      - name: Report Status to Vercel
        if: always()
        run: |
          curl -X POST "${{ secrets.VERCEL_URL }}/api/status" \
          -H "Content-Type: application/json" \
          -d '{"component": "quantum_pipeline", "status": "${{ job.status }}"}'

 # business-analysis:
    name: Business Insight Analysis
    needs: run-quantum-pipeline
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: python github_actions_quantum/quantum/business_analyzer.py
      - name: Report Status to Vercel
        if: always()
        run: |
          curl -X POST "${{ secrets.VERCEL_URL }}/api/status" \
          -H "Content-Type: application/json" \
          -d '{"component": "business_insight", "status": "${{ job.status }}"}'

  evolution-chamber:
    name: Evolution Chamber
    needs: business-analysis
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: python github_actions_quantum/quantum/evolution_chamber.py
      - name: Report Status to Vercel
        if: always()
        run: |
          curl -X POST "${{ secrets.VERCEL_URL }}/api/status" \
          -H "Content-Type: application/json" \
          -d '{"component": "evolution_chamber", "status": "${{ job.status }}"}'

  self-healing-patrol:
    name: Self-Healing Patrol
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install requests
      - name: Run SelfHealingAgent Patrol
        env:
          VERCEL_URL: ${{ secrets.VERCEL_URL }}
        run: python github_actions_quantum/quantum/healing_protocol.py
      - name: Report Status to Vercel
        if: always()
        run: |
          curl -X POST "${{ secrets.VERCEL_URL }}/api/status" \
          -H "Content-Type: application/json" \
          -d '{"component": "self_healing", "status": "${{ job.status }}"}'
